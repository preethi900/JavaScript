/**
 * @param {string} s
 * @param {string} p
 * @return {number[]}
 */
var findAnagrams = function(s, p) {
    const map = new Array(26).fill(0);
  
  
  for (let i = 0; i < p.length; i++) {
    map[p[i].charCodeAt()-97]++;
  }
  
  let j = 0;
  const r = [];
  for (let i = 0; i < s.length; i++) {
    const c = s[i].charCodeAt() - 97;
      map[c]--;
      
    
    while (map[c] < 0) {
      const c2 = s[j++].charCodeAt() - 97;
      map[c2]++;
        
    }
    if (i - j + 1 === p.length) r.push(j);
  }
  
  return r;
};


//Another solution

var findAnagrams = function(s, p) {
    var output = [];
    var map = {};
    
    for(var i = 0 ; i < p.length ; i++) {
        if(p[i] in map) {
            map[p[i]] ++;
        } else {
            map[p[i]] = 1;
        }
    }
    
    let left = 0; 
    let right = 0;
    let count = p.length;
    
    while(right < s.length) {
        if(map[s[right]] > 0) {
             count--;
        }
     
        map[s[right]]--;
        right++;
        
        
        if(count === 0) {
            output.push(left);
        }
        
        if(right - left === p.length) {
            if(map[s[left]] >= 0) {
                count++;
            }
            
            map[s[left]]++;
            left++;
        }
        
        
        
        
        
    }
    return output;
};
