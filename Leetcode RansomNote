/**
 * @param {string} ransomNote
 * @param {string} magazine
 * @return {boolean}
 */
var canConstruct = function(ransomNote, magazine) {
    ransomNote = ransomNote.split('').sort((a,b) => a.charCodeAt()-b.charCodeAt());
    magazine = magazine.split('').sort((a,b) => a.charCodeAt()-b.charCodeAt());
    
    let l1 = ransomNote.length;
    let l2 = magazine.length;
    if (l1 === 0 && l2 === 0) {
        return true;
    }
    if (l1 === l2) {
        if (ransomNote === magazine) {
            return true;
        } else {
            return false;
        }
    }
    if (l1 !== l2) {
        var i = 0, j=0;
        while (i < l1 && j < l2) {
            if (ransomNote[i] === magazine[j]) {
                i++;
                j++;
            } else {
                j++;
            }
        }
        return i === l1;
    }
};


//Dict Method
var canConstruct = function(ransomNote, magazine) {
    var map = {};
    for (var i = 0 ; i < magazine.length ; i++) {
        if(!(magazine[i] in map)) {
            map[magazine[i]] = 1;
        } else {
            map[magazine[i]]++;
        }
    }
    for (var i= 0 ; i < ransomNote.length ; i++) {
        if(ransomNote[i] in map) {
            map[ransomNote[i]]--;
            if(map[ransomNote[i]] === 0) {
                delete map[ransomNote[i]];
            } 
        } else {
            return false;
        }
    }
    return true;
};
