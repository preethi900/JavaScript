/**
 * @param {character[][]} matrix
 * @return {number}
 */
var maximalSquare = function(matrix) {
    if(!matrix.length) {
        return 0;
    }
    let dp = new Array(matrix.length).fill(0).map(v => new Array(matrix[0].length));
    let max = 0;
    for(var i = 0 ; i < matrix.length ; i++) {
        for (var j = 0 ; j < matrix[0].length ; j++) {
            if(i==0 || j == 0) {
                dp[i][j] = matrix[i][j];
            } else if(matrix[i][j] == 1) {
                dp[i][j] = Math.min(dp[i-1][j-1],dp[i-1][j],dp[i][j-1]) + 1;
            } else {
                dp[i][j] = 0;
            }
        
        max = Math.max(max,dp[i][j]);
        }
    }
     return max*max;
};
