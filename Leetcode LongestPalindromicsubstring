var longestPalindrome = function(s) {
    var maxlen =0;
    let start =0;
  for(var i=0 ; i<s.length ; i++) {
      helper(i,i);
      helper(i,i+1);
  }  

    return s.substring(start,start+maxlen);
    function helper(l,r) {
        while(l >=0 && r < s.length &&s[l] === s[r]) {
            l--;
            r++;
        }
        
        if(maxlen < r-l-1) {
            start = l+1;
            maxlen = r-l-1;
        }
    }
};


//Own Solution

var longestPalindrome = function(s) {
    let  j = 0;
    
    let str = '';
    
    var map = {};
    let max = '';
    if(s.split('').reverse().join('') === s) {
        return s;
    }
    
while(j < s.length) {
    
    for(var i = j ; i < s.length ; i++) {
        str += s[i];
        var l = 0 ;
        var r = str.length -1;
        var flag = false;
        while(l <= r) {
            if(str[l] !== str[r]) {
                flag = true;
                break;
            } else {
                l++;
                r--;
            }
        }
        if(!flag) {    
                if(str.length > max.length) {
                    max=str;
                }
        }
        
    }
    str = '';
    j++;
}
    return max;
};
